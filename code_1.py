# -*- coding: utf-8 -*-
"""Code-1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12FK0PuNAck6kpAT18qIZuj9E7_UlueRq

# **Problem 1**

The problem was solved by generating data for two variables, age and salaries of employees. The dataset has 300 observations randomly generated as shown below.
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from matplotlib import style
style.use('ggplot')

age = np.random.uniform(low=33, high=115, size=300)
salary = np.random.uniform(low=1000, high=3500, size=300)

df1=pd.DataFrame({'age':age,'salary':salary})
df1

"""**Plotting Histogram for the Age Data**

The generated Histogram for age is shown below
"""

plt.rcParams.update({'font.size': 14})
plt.figure(figsize=(15, 10))
values, bins, bars = plt.hist(df1['age'], edgecolor='white')
plt.xlabel("Age")
plt.ylabel("Number of Workers")
plt.title('Age Distrubtion')
plt.bar_label(bars, fontsize=20, color='navy')

min_ylim, max_ylim = plt.ylim()
plt.text(df1['age'].mean()*0.7, max_ylim*1.0, 'Mean: {:.2f}'.format(df1['age'].mean()),fontsize=14,color='red')
plt.text(df1['age'].median()*1.1, max_ylim*1.0, 'Median: {:.2f}'.format(df1['age'].median()),fontsize=14,color='red')

plt.margins(x=0.01, y=0.1)
plt.show()

"""**Plotting Histogram for the Salaries Data**

The generated Histogram for salaries is shown below.
"""

plt.rcParams.update({'font.size': 14})
plt.figure(figsize=(15, 10))
values, bins, bars=plt.hist(df1['salary'],color='orange',edgecolor='b')
plt.title('Salaries Histogram', fontsize=14)
plt.xlabel('Salaries ($)',fontsize=14)
plt.ylabel('Frequency',fontsize=14,color='red')
plt.bar_label(bars, fontsize=14, color='navy')


min_ylim, max_ylim = plt.ylim()
plt.text(df1['salary'].mean()*0.7, max_ylim*1.0, 'Mean: {:.2f}'.format(df1['salary'].mean()),fontsize=14,color='red')
plt.text(df1['salary'].median()*1.1, max_ylim*1.0, 'Median: {:.2f}'.format(df1['salary'].median()),fontsize=14,color='red')

plt.margins(x=0.01, y=0.1)
plt.show()

"""**Problem 2**

**Loading the Data**

The data was loaded in Paraquet format as shown below.

The dataset was displayed as shown below.
"""

import pandas as pd

df2 = pd.read_parquet('/content/exercises_problem2.parquet')
df2.head()

"""There are four variables in the dataset, var1, var2, var3 and class.

**Visualizations**

There were multiple visualizations for the dataset, including correlation plotting, classification of the dataset and plotting of class statistics.

The correlation matrix plot is shown below.
"""

plt.rcParams.update({'font.size': 14})
plt.figure(figsize=(15, 10))

import seaborn as sns
corr = df2.corr()
sns.heatmap(corr, cmap="Blues", annot=True)

"""The coefficient of correlation between class and var1 is 0.57.
The coefficient of correlation between class and var2 is 0.73.
The coefficient of correlation between class and var3 is 0.61.
The conclusion is that all the three variables, var1, var2 and var3, have positive correlation with the class data.
"""

var1=df2['var1']
var2=df2['var2']
var3 =df2['var3']
classData = df2['class']

"""**Classification of the Variables**

The second set of visualizations was the classification of the var1 var 2 and var 3 data variables. The classification of the var 1 and var 3 is shown below.
"""

sns.FacetGrid(df2, hue ="class",
              height = 6).map(plt.scatter,
                              'var1',
                              'var2'
                              ).add_legend()

"""The red dots represent the datapoints of var1 and var2 that belong to class 0. On the other hand, the blue dots represent the datapoints that belong to class 1. The classifi9cation shows that most of the datapoints belong to class of 1s."""

sns.FacetGrid(df2, hue ="class",
              height = 6).map(plt.scatter,
                              'var1',
                              'var3'
                              ).add_legend()

"""The red dots represent the datapoints of var1 and var3 that belong to class 0. On the other hand, the blue dots represent the datapoints that belong to class 1. The classifi9cation shows that most of the datapoints belong to class of 1’s."""

sns.FacetGrid(df2, hue ="class",
              height = 6).map(plt.scatter,
                              'var2',
                              'var3'
                              ).add_legend()

"""The red dots represent the datapoints of var2 and var3 that belong to class 0. On the other hand, the blue dots represent the datapoints that belong to class 1. The classification shows that most of the datapoints belong to class 1.

**Visualization of Class Counts**

The class count statistics was represented as shown below.
"""

plt.rcParams.update({'font.size': 14})
plt.figure(figsize=(15, 10))
colors = ['red', 'green']
ax = df2["class"].value_counts().plot(kind="bar", color=colors, figsize=[15, 10])
plt.xticks(rotation=0, horizontalalignment="center", fontsize=14)
plt.ylabel("class", fontsize=16)
plt.title('Class Count', fontsize=14)
for p in ax.patches:
    ax.annotate(
        str(p.get_height()), xy=(p.get_x() + 0.25, p.get_height() + 0.1), fontsize=20
    )

"""There are 400 observations in the dataset, 251 of which belong to the class of 1s, and 149 observations belong to the zero class (0). The visualization was converted into a pie chart as shown below."""

plt.rcParams.update({'font.size': 14})
plt.figure(figsize=(15, 10))
def autopct_format(values):
        def my_format(pct):
            total = sum(values)
            val = int(round(pct*total/100.0))
            return '{:.1f}%\n({v:d})'.format(pct, v=val)
        return my_format

s = df2['class'].value_counts()
plt.pie(s,labels = s.index, autopct=autopct_format(s))
plt.title('Class Count', fontsize=14)

"""The pie chart demonstrates the proportional distribution of the classes. It is observed that 62.7% of the data belongs to the class of 1’s, while 37.3% of the data belongs to the class of 0’s."""